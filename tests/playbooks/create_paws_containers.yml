---
- name: Create paws docker container based on paws images
  hosts: localhost

  tasks:
    - name: Load variables from file
      include_vars:
        file: vars.yml

    - name: Make copies of user directory for volume mounts
      local_action:
        module: synchronize
        src: "{{ local_user_dir }}"
        dest: "/tmp/{{ item.name }}"
      with_items:
        - "{{ containers }}"

    - name: Set permissions for volume mounts
      local_action:
        module: file
        path: "/tmp/{{ item.name }}"
        state: directory
        recurse: yes
        owner: 1000
        group: 1000
      with_items:
        - "{{ containers }}"

    - name: Create container(s)
      docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        command: /bin/bash
        detach: True
        tty: True
        volumes:
          - "/tmp/{{ item.name }}:{{ user_dir }}"
      with_items:
        - "{{ containers }}"

    - name: Add host entries
      add_host:
        name: "{{ item.name }}"
        group: containers
        ansible_connection: docker
      with_items:
        - "{{ containers }}"

    - name: Remove inventory if exists
      file:
        path: paws_inventory
        state: absent

    - name: Create all section
      shell: echo "[all]" > paws_inventory

    - name: Add containers to all section
      shell:
        cmd: |
          cat >> paws_inventory <<EOF
          {{ item.name }} ansible_connection=docker
          EOF
      with_items:
        - "{{ containers }}"

- name: Update resource names
  hosts: containers

  tasks:
    - name: Load variables from file
      include_vars:
        file: vars.yml

    - name: Update resource name to eliminate duplicates
      replace:
        path: "{{ user_dir }}/{{ topology }}"
        regexp: '- name: '
        replace: '- name: {{ 1000 | random }}_'
      with_items:
        - "{{ containers }}"
