Getting Started
===============

Prerequisites
-------------

Make a local copy of the `ws repository <https://github.com/rhpit/ws.git>`_.
This will provide you with paws files for getting started.

.. code-block:: bash
    :linenos:

    # install git (if not already installed)
    sudo dnf install -y git
        -- or --
    sudo yum install -y git

    # clone ws git
    cd ~
    git clone https://github.com/rhpit/ws.git

.. attention::

    We recommend storing the ws repo within your users home directory. By
    default paws will look for a ws directory at /home/$USER/ws to load files.
    You can always override this by defining **-ud** option at runtime.

.. important::

    We strongly recommend that you read about `paws files <files.html>`_.

How To Run
----------

To run paws, just issue the following command in a terminal.

.. code-block:: bash
    :linenos:

    paws

You can view more about each paws task by providing the help option.

.. code-block:: bash
    :linenos:

    paws <task> --help

.. note::

    Each paws task walk through below will be using the default options values.
    These can be overridden at anytime.

Provision
^^^^^^^^^

Provision will provision Windows systems provider it was specified for.

You can find more details about configuring your providers credentials at the
following: `provider credentials <files.html#credentials-yaml>`_.

You will want to create or modify the **resources.yaml** file within your
local copy of the ws repository. This file defines all systems to be
provisioned.

.. code:: yaml

    resources:
        - name: windows
          count: 1
          image: win-2012-r2
          flavor: 4
          network: 192.168.1.0
          keypair: keypair
          ssh_private_key: /home/user/.ssh/id_rsa
          administrator_password: my_password@2018

You can find more details about configuring your resources file at the
following: `resources.yaml <files.html#resources-yaml>`_.

Once your files are set, go ahead and call paws provision task. Shortly you
should have your Windows system provisioned in the provider you defined.

.. code-block:: bash
    :linenos:

    paws provision

.. note::
	More details about provision task can be found here:
	`provision task <tasks.html#provision>`_.

Teardown
^^^^^^^^

Teardown will teardown Windows systems in its given provider. It requires both
files (credentials.yaml & resources.yaml) from provision task. These files
define provider credentials and which systems to delete.


Once your files are set, go ahead and call paws teardown task. Shortly you
should see your Windows systems deleted from your provider.

.. code-block:: bash
    :linenos:

    paws teardown

.. note::
	More details about teardown task can be found here:
	`teardown task <tasks.html#teardown>`_.

Winsetup
^^^^^^^^

Winsetup task will configure services on a Windows system by running a
Windows PowerShell script. Winsetup needs files generated by paws provision
task.

At top of this page you saw how to clone https://github.com/rhpit/ws repo
that contains some samples of powershell and scripts you can use here.

Following the standard scripts files can be found at 
**/home/$USER/ws/powershell**.

Now that you have your PowerShell script you are ready to configure your Windows
system. Call paws to configure your system resource.

.. code-block:: bash
    :linenos:

    paws winsetup -ps powershell/get_system_info.ps1

.. note::
	More details about winsetup task can be found here:
	`winsetup task <tasks.html#winsetup>`_.

Group
^^^^^

Group task will run multiple paws commands as one command. A group is a YAML
file which defines a list of paws tasks to run.

Following the standard group files can be found at **/home/$USER/ws/group**.

First edit or create a group file which will define a list of tasks you want
to run. 

Now that you have your group file you are ready to execute all tasks you have
defined. Call paws to execute your group file.

.. code-block:: bash
    :linenos:

	paws group -n group/2012_winad.yaml

That is it, paws will take it from here to run your group. The group we passed
to paws was **2012_winad.yaml**. This group will provision a Windows system and
configure it as an Active Directory Server. To setup this configuration it
would require lots of paws commands to be run and by using a group it allows
you to simply run one paws command.

.. note::
	More details about group task can be found here:
	`group task <tasks.html#group>`_.

Show
^^^^

Show task will display system resources in your supplied provider. It assumes
the `provision <getting_started.html#provision>`_ task was called and systems
were successfully provisioned. If no systems were provisioned by it, a warning
message will be displayed.

Show will require files from
`provision <getting_started.html#provision>`_ task in order to work.

To view system resources that may have been provisioned, just call paws to see.

.. code-block:: bash
    :linenos:

	paws show

That is it, paws will take it from here to display any system resources that
may still be active in your provider.

.. note::
	More details about show task can be found here:
	`show task <tasks.html#show>`_.
